# Simple workflow for deploying static content to GitHub Pages
name: Build and Deploy Static Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies (if needed)
      run: |
        # Проверяем, есть ли package.json
        if [ -f package.json ]; then
          npm ci
        fi
        
    - name: Debug secrets
      run: |
        echo "Checking if secrets are available..."
        if [ -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
          echo "TELEGRAM_BOT_TOKEN is set (length: ${#TELEGRAM_BOT_TOKEN})"
        else
          echo "TELEGRAM_BOT_TOKEN is NOT set"
        fi
        if [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
          echo "TELEGRAM_CHAT_ID is set (value: ${{ secrets.TELEGRAM_CHAT_ID }})"
        else
          echo "TELEGRAM_CHAT_ID is NOT set"
        fi
        
    - name: Create Telegram config
      run: |
        cat > config.js << EOF
        // KERNI Telegram Bot Configuration
        // Generated by GitHub Actions
        window.TELEGRAM_CONFIG = {
          botToken: '${{ secrets.TELEGRAM_BOT_TOKEN }}',
          chatId: '${{ secrets.TELEGRAM_CHAT_ID }}'
        };
        EOF
        echo "Config file created:"
        cat config.js
        
    - name: Build static pages
      run: |
        echo "🚀 Building static pages..."
        node build.js
        
    - name: Verify build output
      run: |
        echo "📁 Build structure:"
        ls -la build/
        echo "📁 French version:"
        ls -la build/fr/
        echo "📁 English version:"
        ls -la build/en/
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
        force_orphan: true
        
    - name: Deploy to GitHub Pages (PR preview)
      if: github.event_name == 'pull_request'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
        destination_dir: ./preview-${{ github.event.number }}
        force_orphan: true
